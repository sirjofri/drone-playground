.TH "Drone" 3 "Thu Aug 17 2017" "Drone" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Drone
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <drone\&.h>\fP
.PP
Inherits \fBEntity\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDrone\fP (double _mass, double thrust_lr, double thrust_forward, double rudder_min, double rudder_max)"
.br
.ti -1c
.RI "double \fBget_pitch\fP ()"
.br
.ti -1c
.RI "double \fBget_yaw\fP ()"
.br
.ti -1c
.RI "double \fBget_roll\fP ()"
.br
.ti -1c
.RI "\fBAttach\fP *const \fBget_thrust_r\fP ()"
.br
.ti -1c
.RI "\fBAttach\fP *const \fBget_thrust_l\fP ()"
.br
.ti -1c
.RI "\fBAttach\fP *const \fBget_thrust_f\fP ()"
.br
.ti -1c
.RI "\fBAttach\fP *const \fBget_rudder_pitch\fP ()"
.br
.ti -1c
.RI "const double \fBget_mass\fP ()"
.br
.ti -1c
.RI "\fBSensor\fP< double > *const \fBget_s_altitude\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
a general drone (which is very specific at the moment) 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Drone::Drone (double _mass, double thrust_lr, double thrust_forward, double rudder_min, double rudder_max)"
drone constructor
.PP
\fBParameters:\fP
.RS 4
\fI_mass\fP mass of the frame 
.br
\fIthrust_lr\fP maximum of left/right thrusters 
.br
\fIthrust_forward\fP maximum of main thrust 
.br
\fIrudder_min\fP minimum of rudder 
.br
\fIrudder_max\fP maximum of rudder 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "const double Drone::get_mass ()"
get mass of the whole drone
.PP
\fBReturns:\fP
.RS 4
mass of the drone 
.RE
.PP

.SS "double Drone::get_pitch ()"
get pitch
.PP
\fBReturns:\fP
.RS 4
pitch 
.RE
.PP

.SS "double Drone::get_roll ()"
get roll
.PP
\fBReturns:\fP
.RS 4
roll 
.RE
.PP

.SS "\fBAttach\fP *const Drone::get_rudder_pitch ()"
get pitch rudder 
.SS "\fBSensor\fP< double > *const Drone::get_s_altitude ()"
get sensor object
.PP
\fBReturns:\fP
.RS 4
sensor component 
.RE
.PP

.SS "\fBAttach\fP *const Drone::get_thrust_f ()"
get forward/main thrust 
.SS "\fBAttach\fP *const Drone::get_thrust_l ()"
get left thrust 
.SS "\fBAttach\fP *const Drone::get_thrust_r ()"
get right thrust 
.SS "double Drone::get_yaw ()"
get yaw
.PP
\fBReturns:\fP
.RS 4
yaw 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Drone from the source code\&.
