.TH "Sensor< T >" 3 "Sat Aug 19 2017" "Drone" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Sensor< T >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <sensor\&.h>\fP
.PP
Inherits \fBAttach\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSensor\fP (double mass)"
.br
.ti -1c
.RI "virtual T \fBget_value\fP ()"
.br
.ti -1c
.RI "void \fBset_world\fP (\fBWorld\fP *world)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBWorld\fP * \fB_world\fP"
.br
.ti -1c
.RI "T \fBvalue\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename T>
.br
class Sensor< T >"
basic sensor class\&. it connects to the world to get some values\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T > \fBSensor\fP< T >::\fBSensor\fP (double mass)"
Constructor of a \fBSensor\fP
.PP
\fBParameters:\fP
.RS 4
\fImass\fP Mass of the sensor module 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "template<typename T > T \fBSensor\fP< T >::get_value ()\fC [virtual]\fP"
get the value of the sensor
.PP
\fBReturns:\fP
.RS 4
type specified by template 
.RE
.PP

.SS "template<typename T > void \fBSensor\fP< T >::set_world (\fBWorld\fP * world)"
set the world as data source
.PP
\fBParameters:\fP
.RS 4
\fIworld\fP the world 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "template<typename T> \fBWorld\fP* \fBSensor\fP< T >::_world\fC [protected]\fP"
pointer to the world\&. This is used to get some sensor- specific information\&. 
.SS "template<typename T> T \fBSensor\fP< T >::value\fC [protected]\fP"
the value of the sensor\&. can be used to store the wanted value\&. You can maybe fake some delay\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Drone from the source code\&.
